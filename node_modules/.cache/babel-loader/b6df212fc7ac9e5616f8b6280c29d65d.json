{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/yuge/workspace/color-change-boxes/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// actually, I believe this would work as an static page, but the instructions said \"use a framework\" so I am using Vue3\nexport default {\n  name: \"App\",\n  components: {},\n  setup: function setup() {// // console.log(\"setup\");\n    // const pickColor2 = () => {\n    //   var hue = Math.random() * 360;\n    //   // saturation has a lower bound so colors are not too dim\n    //   var saturation = 20 + Math.random() * 80;\n    //   // limit lightness range so colors are not too dark nor too light\n    //   var lightness = 20 + Math.random() * 40;\n    //   return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n    // };\n    // const changeColors2 = () => {\n    //   for (let i = 1; i < 10; i++) {\n    //     var box_name = `box${i}`;\n    //     var boxes = document.getElementsByClassName(box_name);\n    //     //this is saved on a var so box7 has always the same color\n    //     var randomColor = this.pickColor2();\n    //     for (var box of boxes) {\n    //       box.style.backgroundColor = randomColor;\n    //     }\n    //   }\n    // };\n    // return { pickColor2, changeColors2 };\n  },\n  mounted: function mounted() {\n    console.log(\"mounted\"); // const changeColors = this.changeColors();\n\n    this.changeColors();\n    var boxes = document.getElementsByClassName(\"box\");\n\n    var _iterator = _createForOfIteratorHelper(boxes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var box = _step.value;\n\n        // console.log(box);\n        box.onclick = function () {\n          console.log(\"potato\");\n          this.changeColors();\n        };\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  },\n  methods: {\n    pickColor: function pickColor() {\n      var hue = Math.random() * 360; // saturation has a lower bound so colors are not too dim\n\n      var saturation = 20 + Math.random() * 80; // limit lightness range so colors are not too dark nor too light\n\n      var lightness = 20 + Math.random() * 40;\n      return \"hsl(\".concat(hue, \", \").concat(saturation, \"%, \").concat(lightness, \"%)\");\n    },\n    changeColors: function changeColors() {\n      for (var i = 1; i < 10; i++) {\n        var box_name = \"box\".concat(i);\n        var boxes = document.getElementsByClassName(box_name); //this is saved on a var so box7 has always the same color\n\n        var randomColor = this.pickColor();\n\n        var _iterator2 = _createForOfIteratorHelper(boxes),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var box = _step2.value;\n            box.style.backgroundColor = randomColor;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    },\n    setupBoxes: function setupBoxes() {\n      var boxes = document.getElementsByClassName(\"box\");\n\n      var _iterator3 = _createForOfIteratorHelper(boxes),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var box = _step3.value;\n\n          // console.log(box);\n          box.onclick = function () {\n            console.log(\"potato\");\n            this.changeColors();\n          };\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AAEA;EACAA,WADA;EAEAC,cAFA;EAGAC,KAHA,mBAGA,CACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA,CAzBA;EA0BAC,OA1BA,qBA0BA;IACAC,uBADA,CAEA;;IACA;IACA;;IAJA,2CAKAC,KALA;IAAA;;IAAA;MAKA;QAAA;;QACA;QACAC;UACAF;UACA;QACA,CAHA;MAIA;IAXA;MAAA;IAAA;MAAA;IAAA;EAYA,CAtCA;EAuCAG;IACAC,SADA,uBACA;MACA,8BADA,CAEA;;MACA,yCAHA,CAIA;;MACA;MACA;IACA,CARA;IASAC,YATA,0BASA;MACA;QACA;QACA,sDAFA,CAGA;;QACA;;QAJA,4CAKAJ,KALA;QAAA;;QAAA;UAKA;YAAA;YACAC;UACA;QAPA;UAAA;QAAA;UAAA;QAAA;MAQA;IACA,CAnBA;IAoBAI,UApBA,wBAoBA;MACA;;MADA,4CAEAL,KAFA;MAAA;;MAAA;QAEA;UAAA;;UACA;UACAC;YACAF;YACA;UACA,CAHA;QAIA;MARA;QAAA;MAAA;QAAA;MAAA;IASA;EA7BA;AAvCA","names":["name","components","setup","mounted","console","boxes","box","methods","pickColor","changeColors","setupBoxes"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div class=\"group1-9 df fd-c\" id=\"app\">\n    <div class=\"df fg1 fd-c lg-fd-r\">\n      <div class=\"box box1 fg1\" @click=\"changeColors()\"><span>1</span></div>\n\n      <div class=\"fg2 lg-fg1 df fd-cr lg-fd-c\">\n        <div class=\"box box2 fg1\"><span>2</span></div>\n        <div class=\"df fg1\">\n          <div class=\"box box3 fg1\"><span>3</span></div>\n          <div class=\"box box4 fg1\"><span>4</span></div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"df fd-c fg1\">\n      <div class=\"only-mobile box box7 fg1\"><span>7</span></div>\n\n      <div class=\"df fg2\">\n        <div class=\"fg1 df fd-c\">\n          <div class=\"box box5 fg1\"><span>5</span></div>\n          <div class=\"box box6 fg1 lg-fg2\"><span>6</span></div>\n        </div>\n\n        <div class=\"only-desktop box box7 fg1\"><span>7</span></div>\n\n        <div class=\"fg1 df fd-c\">\n          <div class=\"box box8 fg1 lg-fg2\"><span>8</span></div>\n          <div class=\"box box9 fg1\"><span>9</span></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// actually, I believe this would work as an static page, but the instructions said \"use a framework\" so I am using Vue3\n\nexport default {\n  name: \"App\",\n  components: {},\n  setup() {\n    // // console.log(\"setup\");\n    // const pickColor2 = () => {\n    //   var hue = Math.random() * 360;\n    //   // saturation has a lower bound so colors are not too dim\n    //   var saturation = 20 + Math.random() * 80;\n    //   // limit lightness range so colors are not too dark nor too light\n    //   var lightness = 20 + Math.random() * 40;\n    //   return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n    // };\n    // const changeColors2 = () => {\n    //   for (let i = 1; i < 10; i++) {\n    //     var box_name = `box${i}`;\n    //     var boxes = document.getElementsByClassName(box_name);\n    //     //this is saved on a var so box7 has always the same color\n    //     var randomColor = this.pickColor2();\n    //     for (var box of boxes) {\n    //       box.style.backgroundColor = randomColor;\n    //     }\n    //   }\n    // };\n    // return { pickColor2, changeColors2 };\n  },\n  mounted() {\n    console.log(\"mounted\");\n    // const changeColors = this.changeColors();\n    this.changeColors();\n    var boxes = document.getElementsByClassName(\"box\");\n    for (var box of boxes) {\n      // console.log(box);\n      box.onclick = function () {\n        console.log(\"potato\");\n        this.changeColors();\n      };\n    }\n  },\n  methods: {\n    pickColor() {\n      var hue = Math.random() * 360;\n      // saturation has a lower bound so colors are not too dim\n      var saturation = 20 + Math.random() * 80;\n      // limit lightness range so colors are not too dark nor too light\n      var lightness = 20 + Math.random() * 40;\n      return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n    },\n    changeColors() {\n      for (let i = 1; i < 10; i++) {\n        var box_name = `box${i}`;\n        var boxes = document.getElementsByClassName(box_name);\n        //this is saved on a var so box7 has always the same color\n        var randomColor = this.pickColor();\n        for (var box of boxes) {\n          box.style.backgroundColor = randomColor;\n        }\n      }\n    },\n    setupBoxes() {\n      var boxes = document.getElementsByClassName(\"box\");\n      for (var box of boxes) {\n        // console.log(box);\n        box.onclick = function () {\n          console.log(\"potato\");\n          this.changeColors();\n        };\n      }\n    },\n  },\n};\n</script>\n\n<style>\nbody {\n  font-family: Arial, sans-serif;\n}\n\n.box {\n  margin: 5px;\n  color: white;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n}\n\n.box1 {\n  background-color: dodgerblue;\n}\n\n.box2 {\n  background-color: crimson;\n}\n\n.box3 {\n  background-color: darkgoldenrod;\n}\n\n.box4 {\n  background-color: indianred;\n}\n\n.box5 {\n  background-color: darkviolet;\n}\n\n.box6 {\n  background-color: darkturquoise;\n}\n\n.box7 {\n  background-color: teal;\n}\n\n.box8 {\n  background-color: slateblue;\n}\n\n.box9 {\n  background-color: darkslategray;\n}\n\n.group1-9 {\n  height: 500px;\n}\n\n.fd-cr {\n  flex-direction: column-reverse;\n}\n\n.fd-c {\n  flex-direction: column;\n}\n\n.df {\n  display: flex;\n}\n\n.fg1 {\n  flex-grow: 1;\n}\n\n.fg2 {\n  flex-grow: 2;\n}\n\n.only-desktop {\n  display: none;\n}\n\nspan {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n@media screen and (min-width: 600px) {\n  .lg-fg1 {\n    flex-grow: 1;\n  }\n\n  .lg-fg2 {\n    flex-grow: 2;\n  }\n\n  .group1-9 {\n    width: 600px;\n  }\n\n  .lg-fd-c {\n    flex-direction: column;\n  }\n\n  .lg-fd-r {\n    flex-direction: row;\n  }\n\n  .only-desktop {\n    display: flex;\n  }\n\n  .only-mobile {\n    display: none;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}